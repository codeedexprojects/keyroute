import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('admin_panel', '0002_initial'),
        ('vendors', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('original_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('first_time_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('advance_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('payout_status', models.BooleanField(default=False)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partially Paid'), ('paid', 'Fully Paid'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('booking_status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='pending', max_length=20)),
                ('trip_status', models.CharField(choices=[('not_started', 'Not Started'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='not_started', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cancellation_reason', models.CharField(blank=True, max_length=250, null=True)),
                ('total_travelers', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('male', models.PositiveIntegerField(default=0)),
                ('female', models.PositiveIntegerField(default=0)),
                ('children', models.PositiveIntegerField(default=0)),
                ('from_location', models.CharField(blank=True, max_length=255, null=True)),
                ('to_location', models.CharField(blank=True, max_length=255, null=True)),
                ('razorpay_order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_signature', models.CharField(blank=True, max_length=200, null=True)),
                ('booking_id', models.PositiveIntegerField(editable=False, unique=True)),
                ('from_lat', models.FloatField()),
                ('from_lon', models.FloatField()),
                ('to_lat', models.FloatField(blank=True, null=True)),
                ('to_lon', models.FloatField(blank=True, null=True)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('pick_up_time', models.TimeField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, help_text='End date of the trip', null=True)),
                ('night_allowance_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('base_price_days', models.PositiveIntegerField(default=0, help_text='Number of additional days charged at base price')),
                ('total_distance', models.DecimalField(decimal_places=2, default=0.0, help_text='Total distance including stops', max_digits=10)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='vendors.bus')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BusDriverDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('place', models.CharField(max_length=150)),
                ('phone_number', models.CharField(max_length=15)),
                ('driver_image', models.ImageField(upload_to='driver_images/')),
                ('license_image', models.ImageField(upload_to='license_images/')),
                ('experience', models.PositiveIntegerField(help_text='Experience in years')),
                ('age', models.PositiveIntegerField()),
                ('bus_booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='driver_detail', to='bookings.busbooking')),
            ],
        ),
        migrations.CreateModel(
            name='PackageBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('original_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('first_time_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('advance_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('payout_status', models.BooleanField(default=False)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partially Paid'), ('paid', 'Fully Paid'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('booking_status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='pending', max_length=20)),
                ('trip_status', models.CharField(choices=[('not_started', 'Not Started'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='not_started', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cancellation_reason', models.CharField(blank=True, max_length=250, null=True)),
                ('total_travelers', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('male', models.PositiveIntegerField(default=0)),
                ('female', models.PositiveIntegerField(default=0)),
                ('children', models.PositiveIntegerField(default=0)),
                ('from_location', models.CharField(blank=True, max_length=255, null=True)),
                ('to_location', models.CharField(blank=True, max_length=255, null=True)),
                ('razorpay_order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_signature', models.CharField(blank=True, max_length=200, null=True)),
                ('booking_id', models.PositiveIntegerField(editable=False, unique=True)),
                ('rooms', models.IntegerField(default=1)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='vendors.package')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PackageDriverDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('place', models.CharField(max_length=150)),
                ('phone_number', models.CharField(max_length=15)),
                ('driver_image', models.ImageField(upload_to='driver_images/')),
                ('license_image', models.ImageField(upload_to='license_images/')),
                ('experience', models.PositiveIntegerField(help_text='Experience in years')),
                ('age', models.PositiveIntegerField()),
                ('package_booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='driver_detail', to='bookings.packagebooking')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('razorpay_order_id', models.CharField(max_length=100)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_signature', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='bookings.busbooking')),
                ('package_booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='bookings.packagebooking')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PayoutHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payout_date', models.DateTimeField(auto_now_add=True)),
                ('payout_mode', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('upi', 'UPI'), ('other', 'Other')], max_length=20)),
                ('payout_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('admin_commission', models.DecimalField(decimal_places=2, max_digits=12)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('note', models.TextField(blank=True, null=True)),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='PayoutBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_type', models.CharField(choices=[('bus', 'Bus'), ('package', 'Package')], max_length=10)),
                ('booking_id', models.PositiveIntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('commission', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='bookings.payouthistory')),
            ],
        ),
        migrations.AddField(
            model_name='packagebooking',
            name='payout',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookings.payouthistory'),
        ),
        migrations.AddField(
            model_name='busbooking',
            name='payout',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookings.payouthistory'),
        ),
        migrations.CreateModel(
            name='UserBusSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_lat', models.FloatField()),
                ('from_lon', models.FloatField()),
                ('to_lat', models.FloatField(blank=True, null=True)),
                ('to_lon', models.FloatField(blank=True, null=True)),
                ('seat', models.IntegerField(blank=True, null=True)),
                ('ac', models.BooleanField(default=False)),
                ('pick_up_date', models.DateField(blank=True, null=True)),
                ('pick_up_time', models.TimeField(blank=True, null=True)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('search', models.CharField(blank=True, max_length=255, null=True)),
                ('pushback', models.BooleanField(default=False)),
                ('from_location', models.CharField(blank=True, max_length=255, null=True)),
                ('to_location', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bus_search', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusBookingStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_order', models.PositiveIntegerField(help_text='Order of the stop in the journey')),
                ('location_name', models.CharField(max_length=255)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('estimated_arrival', models.DateTimeField(blank=True, null=True)),
                ('distance_from_previous', models.DecimalField(decimal_places=2, default=0.0, help_text='Distance from previous point in km', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stops', to='bookings.busbooking')),
            ],
            options={
                'ordering': ['stop_order'],
                'unique_together': {('booking', 'stop_order')},
            },
        ),
        migrations.CreateModel(
            name='Travelers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True)),
                ('age', models.PositiveBigIntegerField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('place', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('id_proof', models.FileField(blank=True, null=True, upload_to='travelers/id_proofs/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'jpg', 'jpeg', 'png'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bus_booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='travelers', to='bookings.busbooking')),
                ('package_booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='travelers', to='bookings.packagebooking')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('bus_booking__isnull', False), ('package_booking__isnull', True)), models.Q(('bus_booking__isnull', True), ('package_booking__isnull', False)), _connector='OR'), name='one_booking_type_only')],
            },
        ),
        migrations.CreateModel(
            name='UserBusSearchStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_order', models.PositiveIntegerField(help_text='Order of the stop in the journey')),
                ('location_name', models.CharField(max_length=255)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_search', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_stops', to='bookings.userbussearch')),
            ],
            options={
                'ordering': ['stop_order'],
                'unique_together': {('user_search', 'stop_order')},
            },
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.CharField(max_length=100)),
                ('booking_type', models.CharField(choices=[('bus', 'Bus Booking'), ('package', 'Package Booking')], max_length=20)),
                ('transaction_type', models.CharField(choices=[('applied', 'Applied to Booking'), ('removed', 'Removed from Booking'), ('refund', 'Refunded'), ('added', 'Added to Wallet'), ('deducted', 'Deducted from Wallet')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance_before', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('reference_id', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallet_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'booking_id', 'booking_type'], name='bookings_wa_user_id_21e28d_idx'), models.Index(fields=['user', 'transaction_type'], name='bookings_wa_user_id_6a4035_idx'), models.Index(fields=['created_at'], name='bookings_wa_created_cbd6ef_idx')],
            },
        ),
    ]
